{"version":3,"file":"ng2-hallelujah.es5.js","sources":["ts/ng2-hallelujah.ts","ts/public_api.ts","ts/src/api.service.ts","ts/src/references.ts","ts/src/entity-helper.ts","ts/src/page.ts","ts/src/entity.ts","ts/src/hallelujah.module.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {HallelujahModule,API_URL,ApiService,Entity,EntityHelper,Page,CollectionRef,FilteredCollectionRef,PaginatedCollectionRef,EntityRef,RelatedCollectionRef,RelatedEntityRef,QueryParam,Sort} from './public_api';\n","/* SystemJS module definition */\n\n\nexport {HallelujahModule} from './src/hallelujah.module';\nexport {API_URL,ApiService} from './src/api.service';\nexport {Entity} from './src/entity';\nexport {EntityHelper} from './src/entity-helper';\nexport {Page} from './src/page';\nexport {CollectionRef,FilteredCollectionRef,PaginatedCollectionRef,EntityRef,RelatedCollectionRef,RelatedEntityRef,QueryParam,Sort} from './src/references';\n","import {Inject, Injectable, InjectionToken} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {CollectionRef, EntityRef} from './references';\n\nexport let /** @type {?} */ API_URL = new InjectionToken('api.uri');\nexport class ApiService {\n/**\n * @param {?} api_url\n * @param {?} http\n */\nconstructor(\nprivate api_url: string,\nprivate http: HttpClient) {\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ncollection(name: string): CollectionRef {\n    return new CollectionRef(this.getUrl(name), this.http);\n  }\n/**\n * @param {?} url\n * @return {?}\n */\nentity(url: string): EntityRef {\n    return new EntityRef(url, this.http);\n  }\n/**\n * @param {?=} collection\n * @return {?}\n */\nprivate getUrl(collection?: string): string {\n    let /** @type {?} */ url = this.api_url;\n    if (!url.endsWith('/')) {\n      url = url.concat('/');\n    }\n    if (collection) {\n      return url.concat(collection);\n    }\n    return url;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [API_URL, ] }, ]},\n{type: HttpClient, },\n];\n}\n\nfunction ApiService_tsickle_Closure_declarations() {\n/** @type {?} */\nApiService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nApiService.ctorParameters;\n/** @type {?} */\nApiService.prototype.api_url;\n/** @type {?} */\nApiService.prototype.http;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\nimport {EntityHelper} from './entity-helper';\nimport {Page} from './page';\nimport {Entity} from './entity';\nexport class CollectionRef {\n/**\n * @param {?} url\n * @param {?} http\n */\nconstructor(private url: string,\nprivate http: HttpClient) {\n  }\n/**\n * @param {?} id\n * @return {?}\n */\nentity(id: any): EntityRef {\n    return new EntityRef(this.extendUrl(id), this.http);\n  }\n/**\n * @param {?} query\n * @return {?}\n */\nfilter(query: string): FilteredCollectionRef {\n    return new FilteredCollectionRef(this.extendUrl(query), this.http);\n  }\n/**\n * @template E\n * @param {?} type\n * @return {?}\n */\nget <E extends Entity>(type: { new(): E }): Observable<E[]> {\n    return this.http.get<Object>(this.url)\n      .map<Object, E[]>(data => EntityHelper.initEntityCollection(type, data, this.http));\n  }\n/**\n * @param {?} entity\n * @return {?}\n */\nadd(entity: Object): Observable<any> {\n    return this.http.post(this.url, EntityHelper.transformForUpdate(entity));\n  }\n/**\n * @template E\n * @param {?} entity\n * @return {?}\n */\nremove<E extends Entity>(entity: E): Observable<void> {\n    if (entity._links.self) {\n      return this.http.delete<void>(entity._links.self.href);\n    } else {\n      return Observable.throw('Entity not initialised');\n    }\n  }\n/**\n * @param {?=} size\n * @return {?}\n */\npaginate(size?: number): PaginatedCollectionRef {\n    return new PaginatedCollectionRef(this.url, size, this.http);\n  }\n/**\n * @param {?=} part\n * @return {?}\n */\nprivate extendUrl(part?: any): string {\n    let /** @type {?} */ _url = this.url;\n    if (!_url.endsWith('/')) {\n      _url = _url.concat('/');\n    }\n    if (part) {\n      return _url.concat(part);\n    }\n    return _url;\n  }\n}\n\nfunction CollectionRef_tsickle_Closure_declarations() {\n/** @type {?} */\nCollectionRef.prototype.url;\n/** @type {?} */\nCollectionRef.prototype.http;\n}\n\nexport class FilteredCollectionRef {\nprivate queryParams: HttpParams = new HttpParams();\n/**\n * @param {?} url\n * @param {?} http\n */\nconstructor(private url: string,\nprivate http: HttpClient) {\n  }\n/**\n * @param {?} param\n * @param {?=} reset\n * @return {?}\n */\nqueryParam(param: QueryParam, reset = false): FilteredCollectionRef {\n    if (reset) {\n      this.queryParams = new HttpParams();\n    }\n    this.queryParams = this.queryParams.append(param.key, param.value);\n    return this;\n  }\n/**\n * @template E\n * @param {?} type\n * @return {?}\n */\nget <E extends Entity>(type: { new(): E }): Observable<E[]> {\n    return this.http.get<Object>(this.url, {params: this.queryParams})\n      .map<Object, E[]>(data => EntityHelper.initEntityCollection(type, data, this.http));\n  }\n/**\n * @param {?=} size\n * @return {?}\n */\npaginate(size?: number): PaginatedCollectionRef {\n    return new PaginatedCollectionRef(EntityHelper.addHttpParamsToUrl(this.url, this.queryParams), size, this.http);\n  }\n\n}\n\nfunction FilteredCollectionRef_tsickle_Closure_declarations() {\n/** @type {?} */\nFilteredCollectionRef.prototype.queryParams;\n/** @type {?} */\nFilteredCollectionRef.prototype.url;\n/** @type {?} */\nFilteredCollectionRef.prototype.http;\n}\n\nexport class PaginatedCollectionRef {\nprivate sorting = new HttpParams();\nprivate sizeParam = new HttpParams();\n/**\n * @param {?} url\n * @param {?} size\n * @param {?} http\n */\nconstructor(private url: string,\nprivate size: number,\nprivate http: HttpClient) {\n    if (size) {\n      this.sizeParam = this.sizeParam.append('size', size.toString());\n    }\n  }\n/**\n * @param {?} sort\n * @return {?}\n */\nsort(sort: Sort): PaginatedCollectionRef {\n    this.sorting = this.sorting.append(sort.property, sort.order);\n    return this;\n  }\n/**\n * @template E\n * @param {?} type\n * @return {?}\n */\nget <E extends Entity>(type: { new(): E }): Observable<Page<E>> {\n    const /** @type {?} */ params = this.size ? this.sorting.append('size', this.size.toString()) : this.sorting;\n    return this.http.get<Object>(this.url, {params: params})\n      .map<Object, Page<E>>(data => EntityHelper.initPage(type, data, this.http));\n  }\n}\n\nfunction PaginatedCollectionRef_tsickle_Closure_declarations() {\n/** @type {?} */\nPaginatedCollectionRef.prototype.sorting;\n/** @type {?} */\nPaginatedCollectionRef.prototype.sizeParam;\n/** @type {?} */\nPaginatedCollectionRef.prototype.url;\n/** @type {?} */\nPaginatedCollectionRef.prototype.size;\n/** @type {?} */\nPaginatedCollectionRef.prototype.http;\n}\n\nexport class EntityRef {\n/**\n * @param {?} url\n * @param {?} http\n */\nconstructor(private url: string,\nprivate http: HttpClient) {\n  }\n/**\n * @template E\n * @param {?} type\n * @return {?}\n */\nget <E extends Entity>(type: { new(): E }): Observable<E> {\n    return this.http.get<Object>(this.url)\n      .map<Object, E>(data => EntityHelper.initEntity(type, data, this.http));\n  }\n}\n\nfunction EntityRef_tsickle_Closure_declarations() {\n/** @type {?} */\nEntityRef.prototype.url;\n/** @type {?} */\nEntityRef.prototype.http;\n}\n\nexport class RelatedCollectionRef {\n/**\n * @param {?} url\n * @param {?} http\n */\nconstructor(private url: string,\nprivate http: HttpClient) {\n  }\n/**\n * @template E\n * @param {?} type\n * @return {?}\n */\nget <E extends Entity>(type: { new(): E }): Observable<E[]> {\n    return this.http.get<Object>(this.url)\n      .map<Object, E[]>(data => EntityHelper.initEntityCollection(type, data, this.http));\n  }\n/**\n * @param {?} size\n * @return {?}\n */\npaginate(size: number): PaginatedCollectionRef {\n    return new PaginatedCollectionRef(this.url, size, this.http);\n  }\n/**\n * @template E\n * @param {?} entity\n * @return {?}\n */\nadd<E extends Entity>(entity: E): Observable<void> {\n    if (entity._links.self) {\n      return this.http.post<void>(this.url, entity._links.self.href, {headers: new HttpHeaders().set('Content-Type', 'text/uri-list')});\n    } else {\n      return Observable.throw('Entity not initialised');\n    }\n  }\n/**\n * @template E\n * @param {?} entities\n * @return {?}\n */\nset <E extends Entity>(entities: E[]): Observable<void> {\n    if (entities.every(entity => entity._links.self)) {\n      const /** @type {?} */ urls: string[] = entities.map<string>(entity => entity._links.self.href);\n      return this.http.put<void>(this.url, urls.join('\\n'), {headers: new HttpHeaders().set('Content-Type', 'text/uri-list')});\n    } else {\n      return Observable.throw('Entity not initialised');\n    }\n  }\n/**\n * @return {?}\n */\nsetNull(): Observable<void> {\n    return this.http.delete<void>(this.url);\n  }\n\n}\n\nfunction RelatedCollectionRef_tsickle_Closure_declarations() {\n/** @type {?} */\nRelatedCollectionRef.prototype.url;\n/** @type {?} */\nRelatedCollectionRef.prototype.http;\n}\n\nexport class RelatedEntityRef {\n/**\n * @param {?} url\n * @param {?} http\n */\nconstructor(private url: string,\nprivate http: HttpClient) {\n  }\n/**\n * @template E\n * @param {?} type\n * @return {?}\n */\nget <E extends Entity>(type: { new(): E }): Observable<E> {\n    return this.http.get<Object>(this.url)\n      .map<Object, E>(data => EntityHelper.initEntity(type, data, this.http));\n  }\n/**\n * @template E\n * @param {?} entity\n * @return {?}\n */\nset <E extends Entity>(entity: E): Observable<void> {\n    if (entity._links.self) {\n      return this.http.put<void>(this.url, entity._links.self.href, {headers: new HttpHeaders().set('Content-Type', 'text/uri-list')});\n    } else {\n      return Observable.throw('Entity not initialised');\n    }\n  }\n/**\n * @return {?}\n */\nsetNull(): Observable<void> {\n    return this.http.delete<void>(this.url);\n  }\n\n}\n\nfunction RelatedEntityRef_tsickle_Closure_declarations() {\n/** @type {?} */\nRelatedEntityRef.prototype.url;\n/** @type {?} */\nRelatedEntityRef.prototype.http;\n}\n\n\nexport interface QueryParam {\n  key: string;\n  value: string;\n}\n\nexport interface Sort {\n  property: string;\n  order?: 'asc' | 'desc';\n}\n","import {HttpClient, HttpParams} from '@angular/common/http';\nimport {Entity} from './entity';\nimport {Page} from './page';\nexport class EntityHelper {\n/**\n * @param {?} object\n * @return {?}\n */\nstatic transformForUpdate(object: Object): Object {\n    const /** @type {?} */ result: any = {};\n    for (const /** @type {?} */ key in object) {\n      if (object[key] instanceof Entity) {\n        result[key] = EntityHelper.stripTemplatedUrl(object[key]['_links']['self']['href']);\n      } else if (object[key] !== '_links') {\n        result[key] = object[key];\n      }\n    }\n    return /** @type {?} */(( result as Object));\n  }\n/**\n * @template E\n * @param {?} type\n * @param {?} payload\n * @param {?} http\n * @return {?}\n */\nstatic initEntity<E extends Entity>(type: { new(): E }, payload: Object, http: HttpClient): E {\n    const /** @type {?} */ entity = new type();\n    for (const /** @type {?} */ p in payload) {\n      entity[p] = payload[p];\n    }\n    entity.http = http;\n    return entity;\n  }\n/**\n * @template E\n * @param {?} type\n * @param {?} payload\n * @param {?} http\n * @return {?}\n */\nstatic initEntityCollection<E extends Entity>(type: { new(): E }, payload: any, http: HttpClient): E[] {\n    return payload._embedded[Object.keys(payload['_embedded'])[0]]\n      .map(item => EntityHelper.initEntity(type, item, http));\n\n  }\n/**\n * @template E\n * @param {?} type\n * @param {?} payload\n * @param {?} http\n * @return {?}\n */\nstatic initPage<E extends Entity>(type: { new(): E }, payload: any, http: HttpClient): Page<E> {\n    const /** @type {?} */ page = new Page(type, http);\n    page.items = EntityHelper.initEntityCollection(type, payload, http);\n    page.totalItems = payload.page ? payload.page.totalElements : page.items.length;\n    page.totalPages = payload.page ? payload.page.totalPages : 1;\n    page.pageNumber = payload.page ? payload.page.number : 1;\n    page.selfUrl = payload._links.self ? EntityHelper.stripTemplatedUrl(payload._links.self.href) : undefined;\n    page.nextUrl = payload._links.next ? EntityHelper.stripTemplatedUrl(payload._links.next.href) : undefined;\n    page.prevUrl = payload._links.prev ? EntityHelper.stripTemplatedUrl(payload._links.prev.href) : undefined;\n    page.firstUrl = payload._links.first ? EntityHelper.stripTemplatedUrl(payload._links.first.href) : undefined;\n    page.lastUrl = payload._links.last ? EntityHelper.stripTemplatedUrl(payload._links.last.href) : undefined;\n    return page;\n  }\n/**\n * @param {?} url\n * @return {?}\n */\nstatic stripTemplatedUrl(url: string): string {\n    return url.split('{').shift();\n  }\n/**\n * @param {?} url\n * @param {?} params\n * @return {?}\n */\nstatic addHttpParamsToUrl(url: string, params: HttpParams): string {\n    let /** @type {?} */ _url = url;\n    if (!url.includes('?')) {\n      _url = _url.concat('?');\n    }\n    return _url.concat(params.toString());\n  }\n}\n","import {Observable} from 'rxjs/Observable';\nimport {EntityHelper} from './entity-helper';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {Entity} from './entity';\nimport {Sort} from './references';\nexport class Page<E extends Entity> {\n\n  totalPages = 1;\n  totalItems = 0;\n  pageNumber = 0;\n  size: 0;\n  sorting: Sort[] = [];\n\n  items: E[] = [];\n\n  nextUrl: string;\n  prevUrl: string;\n  firstUrl: string;\n  lastUrl: string;\n  selfUrl: string;\n  selfUrlWithoutPageParam: string;\n/**\n * @param {?} type\n * @param {?} http\n */\nconstructor(private type: { new(): E },\nprivate http: HttpClient) {\n  }\n/**\n * @return {?}\n */\nnext(): Observable<Page<E>> {\n    if (this.nextUrl) {\n      return this.http.get(this.nextUrl)\n        .map(data => EntityHelper.initPage(this.type, data, this.http));\n    } else {\n      return Observable.throw('No next page available');\n    }\n  }\n/**\n * @return {?}\n */\nprev(): Observable<Page<E>> {\n    if (this.prevUrl) {\n      return this.http.get(this.nextUrl)\n        .map(data => EntityHelper.initPage(this.type, data, this.http));\n    } else {\n      return Observable.throw('No previous page available');\n    }\n  }\n/**\n * @return {?}\n */\nfirst(): Observable<Page<E>> {\n    if (this.firstUrl) {\n      return this.http.get(this.nextUrl)\n        .map(data => EntityHelper.initPage(this.type, data, this.http));\n    } else {\n      return Observable.throw('No first page available');\n    }\n  }\n/**\n * @return {?}\n */\nlast(): Observable<Page<E>> {\n    if (this.lastUrl) {\n      return this.http.get(this.nextUrl)\n        .map(data => EntityHelper.initPage(this.type, data, this.http));\n    } else {\n      return Observable.throw('No last page available');\n    }\n  }\n\n  /**\n   * Functionalities to be added in next version\n   *\n   page(nr: number): Observable<Page<E>> {\n    const httpParams = this.sortParams().append('size', this.size.toString()).append('page', nr.toString());\n    return this.http.get(this.baseUrl(), {params: httpParams})\n      .map(data => EntityHelper.initPage(this.type, data, this.http));\n  }\n\n   resize(size: number): Observable<Page<E>> {\n    const httpParams = this.sortParams().append('size', size.toString()).append('page', this.pageNumber.toString());\n    return this.http.get(this.baseUrl(), {params: httpParams})\n      .map(data => EntityHelper.initPage(this.type, data, this.http));\n  }\n\n   sort(sort: Sort, reset = false): Observable<Page<E>> {\n    if(reset){\n      this.sorting = [];\n    }else {\n      this.sorting = this.sorting.filter( _sort => !(_sort.property === sort.property));\n    }\n    this.sorting.push(sort);\n    const httpParams = this.sortParams().append('size', this.size.toString()).append('page', this.pageNumber.toString());\n    return this.http.get(this.baseUrl(), {params: httpParams})\n      .map<Object, Page<E>>(data => EntityHelper.initPage(this.type, data, this.http));\n  }\n\n\n\n   private sortParams(): HttpParams {\n    let httpParams = new HttpParams();\n    this.sorting.forEach(sort => httpParams = httpParams.append('sort', sort.property + ',' +sort.order));\n    return httpParams;\n  }\n\n   private baseUrl(): string{\n    return this.selfUrl.substring(0,this.selfUrl.indexOf('?'));\n  }\n\n   **/\n}\n\nfunction Page_tsickle_Closure_declarations() {\n/** @type {?} */\nPage.prototype.totalPages;\n/** @type {?} */\nPage.prototype.totalItems;\n/** @type {?} */\nPage.prototype.pageNumber;\n/** @type {?} */\nPage.prototype.size;\n/** @type {?} */\nPage.prototype.sorting;\n/** @type {?} */\nPage.prototype.items;\n/** @type {?} */\nPage.prototype.nextUrl;\n/** @type {?} */\nPage.prototype.prevUrl;\n/** @type {?} */\nPage.prototype.firstUrl;\n/** @type {?} */\nPage.prototype.lastUrl;\n/** @type {?} */\nPage.prototype.selfUrl;\n/** @type {?} */\nPage.prototype.selfUrlWithoutPageParam;\n/** @type {?} */\nPage.prototype.type;\n/** @type {?} */\nPage.prototype.http;\n}\n\n\n\n","import {Observable} from 'rxjs/Observable';\nimport'rxjs/add/operator/map';\nimport'rxjs/add/operator/catch';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {EntityHelper} from './entity-helper';\nimport {RelatedCollectionRef, RelatedEntityRef} from './references';\n/**\n * @abstract\n */\nexport abstract class Entity {\n\n  http: HttpClient;\n  _links: any;\nconstructor() {\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nrelatedCollection(name: string): RelatedCollectionRef {\n    if (this._links[name]) {\n      return new RelatedCollectionRef(EntityHelper.stripTemplatedUrl(this._links[name].href), this.http);\n    } else {\n      throw new Error('Link ' + name + ' does not exist!');\n    }\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nrelatedEntity(name: string): RelatedEntityRef {\n    if (this._links[name]) {\n      return new RelatedEntityRef(EntityHelper.stripTemplatedUrl(this._links[name].href), this.http);\n    } else {\n      throw new Error('Link ' + name + ' does not exist!');\n    }\n  }\n/**\n * @return {?}\n */\nsave(): Observable<void> {\n    if (this._links.self) {\n      return this.http.put<void>(EntityHelper.stripTemplatedUrl(this._links.self.href),\n        EntityHelper.transformForUpdate(this));\n    } else {\n      throw new Error('Entity not initialised');\n    }\n  }\n/**\n * @param {?} object\n * @return {?}\n */\nupdate(object: Object): Observable<void> {\n    if (this._links.self) {\n      return this.http.patch<void>(EntityHelper.stripTemplatedUrl(this._links.self.href), EntityHelper.transformForUpdate(object));\n    } else {\n      throw new Error('Entity not initialised');\n    }\n  }\n\n}\n\nfunction Entity_tsickle_Closure_declarations() {\n/** @type {?} */\nEntity.prototype.http;\n/** @type {?} */\nEntity.prototype._links;\n}\n\n","import {NgModule} from '@angular/core';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\nexport class HallelujahModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [HttpClientModule],\n    declarations: [],\n    exports: [HttpClientModule],\n    providers: [HttpClient]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HallelujahModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHallelujahModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHallelujahModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["http","Observable"],"mappings":"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"}
